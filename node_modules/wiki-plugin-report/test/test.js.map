{
  "version": 3,
  "sources": [
    "test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "report = require './report'\n\ndescribe 'report plugin', ->\n\n\tdescribe 'parsing', ->\n\n\t\tit 'returns an array', ->\n\t\t\tschedule = report.parse \"\"\n\t\t\texpect(schedule).to.eql []\n\n\t\tit 'parses intervals', ->\n\t\t\t[issue] = report.parse \"DAILY ward@example.com\"\n\t\t\texpect(issue.interval).to.be 'DAILY'\n\n\t\tit 'parses offsets', ->\n\t\t\t[issue] = report.parse \"WEEKLY TUESDAY NOON\"\n\t\t\texpect(issue.offsets).to.eql ['TUESDAY', 'NOON']\n\n\t\tit 'parses recipients', ->\n\t\t\t[issue] = report.parse \"DAILY ward@c2.com root@c2.com\"\n\t\t\texpect(issue.recipients).to.eql ['ward@c2.com', 'root@c2.com']\n\n\t\tit 'parses multiple issues', ->\n\t\t\tschedule = report.parse \"WEEKLY MONTHLY YEARLY\"\n\t\t\texpect(schedule).to.have.length 3\n\n\tdescribe 'advancing', ->\n\n\t\tit 'handles weeks', ->\n\t\t\t[issue] = report.parse \"WEEKLY\"\n\t\t\tdate = new Date 2012, 12-1, 25, 3, 4, 5\n\t\t\tcount = (i) -> report.advance(date, issue, i)\n\t\t\texpect(count -1).to.eql new Date 2012, 12-1, 16\n\t\t\texpect(count 0).to.eql new Date 2012, 12-1, 23\n\t\t\texpect(count 1).to.eql new Date 2012, 12-1, 30\n\t\t\texpect(count 2).to.eql new Date 2013, 1-1, 6\n\n\t\tit 'handles weeks with offsets (noon > now)', ->\n\t\t\t[issue] = report.parse \"WEEKLY TUESDAY NOON\"\n\t\t\tdate = new Date 2012, 12-1, 25, 3, 4, 5\n\t\t\tcount = (i) -> report.advance(date, issue, i)\n\t\t\texpect(count -1).to.eql new Date 2012, 12-1, 11, 12\n\t\t\texpect(count 0).to.eql new Date 2012, 12-1, 18, 12\n\t\t\texpect(count 1).to.eql new Date 2012, 12-1, 25, 12\n\t\t\texpect(count 2).to.eql new Date 2013, 1-1, 1, 12\n\n\t\tit 'handles years with offsets (march < now)', ->\n\t\t\t[issue] = report.parse \"YEARLY MARCH FRIDAY EVENING\"\n\t\t\tdate = new Date 2012, 12-1, 25, 3, 4, 5\n\t\t\tcount = (i) -> report.advance(date, issue, i)\n\t\t\texpect(count -1).to.eql new Date 2011, 3-1, 4, 18\n\t\t\texpect(count 0).to.eql new Date 2012, 3-1, 2, 18\n\t\t\texpect(count 1).to.eql new Date 2013, 3-1, 1, 18\n\t\t\texpect(count 2).to.eql new Date 2014, 3-1, 7, 18\n\n\t\tit 'handles election day (election > now)', ->\n\t\t\t[issue] = report.parse \"YEARLY NOVEMBER MONDAY TUESDAY MORNING\"\n\t\t\tdate = new Date 2016, 1, 2, 3, 4, 5\n\t\t\tcount = (i) -> report.advance(date, issue, i)\n\t\t\texpect(count -1).to.eql new Date 2014, 11-1, 4, 6\n\t\t\texpect(count 0).to.eql new Date 2015, 11-1, 3, 6\n\t\t\texpect(count 1).to.eql new Date 2016, 11-1, 8, 6\n\t\t\texpect(count 2).to.eql new Date 2017, 11-1, 7, 6\n"
  ],
  "sourceRoot": ""
}