{
  "version": 3,
  "sources": [
    "post.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "child = require 'child_process'\nfs = require 'fs'\nreport = require './report.js'\nprint = (arg...) -> console.log arg...\n\n\n\n# 0 * * * * (cd wiki/client/plugins/report; Port=:1111 /usr/local/bin/node post.js)\n\nSite = process.env.Site or null\nPort = process.env.Port or ''\nFarm = process.env.Farm or '../../../data/farm' unless Site\nSufix = process.env.Sufix or 'report'\n\n\n\n# Fetch data from wiki farm files\n\nfindPaths = (done) ->\n  if Farm\n    child.exec \"ls #{Farm}/*/pages/*-#{Sufix}\", (err, stdout, stderr) ->\n      for path in stdout.split /\\n/\n        continue if path is ''\n        [slug,x,site] = path.split('/').reverse()\n        done path, site, slug\n  else\n    child.exec \"ls ../../../data/pages/*-#{Sufix}\", (err, stdout, stderr) ->\n      for path in stdout.split /\\n/\n        continue if path is ''\n        [slug] = path.split('/').reverse()\n        done path, Site, slug\n\nfetchPage = (path, done) ->\n  text = fs.readFile path, 'utf8', (err, text) ->\n    return console.log ['fetchPage', path, err] if err\n    done JSON.parse text\n\nfindSchedule = (page) ->\n  for item in page.story\n    return report.parse(item.text) if item.type is 'report'\n  null\n\nfindPubs = (done) ->\n  findPaths (path, site, slug) ->\n    fetchPage path, (page) ->\n      if schedule = findSchedule page\n        for issue in schedule\n          if issue.interval? and issue.recipients?.length\n            done {site, slug, page, schedule, issue}\n\n\n\n# Compose summary from story and journal\n\nlinks = (text) ->\n  text.replace /\\[(http.*?) +(.*?)\\]/gi, \"[$2]\"\n\nflow = (text) ->\n  text.replace(/\\s+/g, ' ') + \"\\n\"\n\nfold = (text) ->\n  # http://james.padolsey.com/javascript/wordwrap-for-javascript/\n  text.match(/.{1,50}(\\s|$)|\\S+?(\\s|$)/g).join \"\\n\"\n\ncompose = (page, since) ->\n  active = {}\n  for action in page.journal\n    if action.date and action.date > since\n      active[action.id] = 'NEW' if action.type == 'add'\n      active[action.id] = 'UPDATE' if action.type == 'edit' and not active[action.id]\n  result = []\n  for item in page.story\n    if item.type is 'paragraph' and active[item.id]\n      result.push active[item.id]\n      result.push fold flow links item.text\n  result.join \"\\n\"\n\nready = ({issue, now, period}) ->\n  window = period*60*1000\n  thisIssue = report.advance(now, issue, 0)\n  lapse = now.getTime() - thisIssue.getTime()\n  lapse < window\n\n\n\n# Hand off to sendmail for distribution\n\nheader = (fields) ->\n  (\"#{k}: #{v}\" for k, v of fields).join \"\\n\"\n\nenclose = ({site, slug, page, issue, summary}) ->\n  [header\n    To: issue.recipients.join \", \"\n    'Reply-to': issue.recipients.join \", \"\n    Subject: \"#{page.title} (#{issue.interval})\"\n  \"#{page.title}\\nPublished #{issue.interval} from Federated Wiki\"\n  summary\n  \"See details at\\nhttp://#{site}#{Port}/#{slug}.html\"].join \"\\n\\n\"\n\nsendmail = (pub) ->\n  output = []\n  send = child.spawn '/usr/sbin/sendmail', ['-fward@wiki.org', '-t']\n  send.stdin.write pub.message\n  send.stdin.end()\n  send.stderr.setEncoding 'utf8'\n  send.stderr.on 'data', (data) -> output.push data\n  send.on 'exit', (code) ->\n    print \"sent #{pub.page.title} (#{pub.issue.interval}), code: #{code}\"\n    print output.join ''\n\n\n\n# Main program loops over all publications\n\nfindPubs (pub) ->\n  pub.now = new Date(2012,12-1,21,0,0,3)\n  pub.now = new Date()\n  pub.period = 60\n  if ready pub\n    pub.summary = compose pub.page, report.advance(pub.now, pub.issue, -1)\n    unless pub.summary is ''\n      pub.message = enclose pub\n      sendmail pub\n"
  ],
  "sourceRoot": ""
}