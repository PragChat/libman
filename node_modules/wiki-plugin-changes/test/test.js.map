{
  "version": 3,
  "sources": [
    "test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "pluginCtor = require('./changes')\n\ncreateFakeLocalStorage = (initialContents={})->\n  store = initialContents\n\n  keys = -> (k for k,_ of store)\n  getStoreSize = -> keys().length\n\n  fake = \n    setItem: (k,v)-> store[k] = v\n    getItem: (k)-> store[k]\n    key: (i) -> keys()[i]\n    removeItem: (k) -> delete store[k]\n\n  Object.defineProperty( fake, 'length', { get: getStoreSize } )\n  fake\n\n\ndescribe 'changes plugin', ->\n  fakeLocalStore = undefined\n  $div = undefined\n  \n  beforeEach ->\n    $div = $('<div/>')\n    fakeLocalStore = createFakeLocalStorage()\n\n  makePlugin = -> pluginCtor($,{localStorage: fakeLocalStore})\n  installPlugin = -> \n    plugin = makePlugin()\n    plugin.emit( $div, {} )\n    plugin.bind( $div, {} )\n\n  expectNumberOfPagesToBe = (expectedLength)->\n    expect( $div.find('li a').length ).to.be(expectedLength)\n\n  clickDeleteForPageWithSlug = (slug)->\n    $div.find(\"li a[data-page-name='#{slug}']\").siblings('button').trigger('click')\n\n  it \"renders 'empty' when there are no local changes\", ->\n    installPlugin()\n    expect( $div.html() ).to.contain('empty')\n    expectNumberOfPagesToBe(0)\n\n  describe 'some pages in local store', ->\n    beforeEach ->\n      fakeLocalStore = createFakeLocalStorage(\n        page1: JSON.stringify({ title: \"A Page\" }),\n        page2: JSON.stringify({ title: \"Another Page\" }),\n        page3: JSON.stringify({ title: \"Page the Third\" })\n      )\n\n    it \"doesn't render 'empty'\", ->\n      installPlugin()\n      expect( $div.html() ).not.to.contain('empty')\n\n    it \"lists each page found in the local store\", ->\n      installPlugin()\n      expectNumberOfPagesToBe(3)\n      allTitles = $div.find('li a').map( (_,a)-> $(a).html() ).toArray().join('')\n      expect( allTitles ).to.contain('A Page')\n      expect( allTitles ).to.contain('Another Page')\n      expect( allTitles ).to.contain('Page the Third')\n\n    it \"removes a page from local store\", ->\n      installPlugin()\n      expect( fakeLocalStore.getItem('page2') ).to.be.ok()\n      clickDeleteForPageWithSlug('page2')\n      expect( fakeLocalStore.getItem('page2') ).not.to.be.ok()\n\n\n    it \"updates the plugin div when a page is removed\", ->\n      installPlugin()\n      expectNumberOfPagesToBe(3)\n      clickDeleteForPageWithSlug('page2')\n      expectNumberOfPagesToBe(2)\n"
  ],
  "sourceRoot": ""
}