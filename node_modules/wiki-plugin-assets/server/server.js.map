{
  "version": 3,
  "sources": [
    "server.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# assets plugin, server-side component\n# These handlers are launched with the wiki server. \n\nfs = require 'fs'\n{ basename } = require 'path'\nmkdirp = require 'mkdirp'\nasync = require 'async'\nformidable = require 'formidable'\n\ncors = (req, res, next) ->\n  res.header('Access-Control-Allow-Origin', '*')\n  next()\n\nstartServer = (params) ->\n  app = params.app\n  argv = params.argv\n\n  app.get '/plugin/assets/list', cors, (req, res) ->\n    assets = (req.query.assets||'').match(/([\\w\\/-]*)/)[1]\n    path = \"#{argv.assets}/#{assets}\"\n    isFile = (name, done) ->\n      return done false if name.match /^\\./\n      fs.stat \"#{path}/#{name}\", (error, stats) ->\n        return done error if error\n        return done null, stats.isFile()\n    fs.readdir path, (error, names) ->\n      return res.json {error} if error\n      async.filter names, isFile, (error, files) ->\n        return res.json {error, files}\n\n  app.post '/plugin/assets/upload', (req, res) ->\n    return res.status(401).send(\"must login\") unless req.session?.passport?.user || req.session?.email || req.session?.friend\n\n    form = new (formidable.IncomingForm)\n    form.multiples = true\n    form.uploadDir = \"#{argv.assets}\"\n    mkdirp.sync form.uploadDir\n    form.on 'field', (name, value) ->\n      return unless name == 'assets'\n      assets = (value||'').match(/([\\w\\/-]*)/)[1]\n      form.uploadDir = \"#{argv.assets}/#{assets}\"\n      mkdirp.sync form.uploadDir\n    form.on 'file', (field, file) ->\n      fs.rename file.path, \"#{form.uploadDir}/#{file.name}\", (err) ->\n        return res.status(500).send(\"rename error: #{err}\") if err\n    form.on 'error', (err) ->\n      console.log \"upload error: #{err}\"\n      res.status(500).send(\"upload error: #{err}\")\n    form.on 'end', ->\n      res.end 'success'\n    form.parse req\n\n  app.post '/plugin/assets/delete', (req, res) ->\n    return res.status(401).send(\"must login\") unless req.session?.passport?.user || req.session?.email || req.session?.friend\n    file = basename(req.query.file||'')\n    assets = (req.query.assets||'').match(/([\\w\\/-]*)/)[1]\n    toRemove = \"#{argv.assets}/#{assets}/#{file}\"\n    fs.unlink toRemove, (err) ->\n      return res.status(500).send(err.message) if err\n      res.status(200).send('ok')\n\nmodule.exports = {startServer}\n"
  ],
  "sourceRoot": ""
}