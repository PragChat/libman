{
  "version": 3,
  "sources": [
    "server.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "# plugmatic plugin, server-side component\n# These handlers are launched with the wiki server.\n\nfs = require 'fs'\nglob = require 'glob'\nasync = require 'async'\njsonfile = require 'jsonfile'\nhttps = require 'https'\nexecFile = require('child_process').execFile\n\n\ngithub = (path, done) ->\n  options =\n    host: 'raw.githubusercontent.com'\n    port: 443\n    method: 'GET'\n    path: path\n  try\n    req = https.get options, (res) ->\n      res.setEncoding 'utf8'\n      data = ''\n      res.on 'error', () ->\n        done null\n      res.on 'timeout', () ->\n        done null\n      res.on 'data', (d) ->\n        data += d\n      res.on 'end', () ->\n        done data\n    req.on 'error', () ->\n      done null\n  catch e\n    done null\n\n# http://www.sebastianseilund.com/nodejs-async-in-practice\n\nstartServer = (params) ->\n  app = params.app\n  argv = params.argv\n  bundle = null\n\n  github '/fedwiki/wiki/master/package.json', (data) ->\n    bundle =\n      date: Date.now()\n      data: JSON.parse data||'{\"dependencies\":{}}'\n\n  route = (endpoint) -> \"/plugin/plugmatic/#{endpoint}\"\n  path = (file) -> \"#{argv.packageDir}/#{file}\"\n\n\n  info = (file, done) ->\n    plugin = file.slice 12\n    site = {plugin}\n\n    birth = (cb) ->\n      fs.stat path(\"#{file}/client/#{plugin}.js\"), (err, stat) ->\n        site.birth = stat?.birthtime?.getTime(); cb()\n    pages = (cb) ->\n      synopsis = (slug, cb2) ->\n        jsonfile.readFile path(\"#{file}/pages/#{slug}\"), {throws:false}, (err, page) ->\n          title = page.title || slug\n          synopsis = page.story?[0]?.text || page.story?[1]?.text || 'empty'\n          cb2 null, {file, slug, title, synopsis}\n      fs.readdir path(\"#{file}/pages\"), (err, slugs) ->\n        async.map slugs||[], synopsis, (err, pages) ->\n          site.pages = pages; cb()\n    packagejson = (cb) ->\n      jsonfile.readFile path(\"#{file}/package.json\"), {throws:false}, (err, packagejson) ->\n        site.package = packagejson; cb()\n    factory = (cb) ->\n      jsonfile.readFile path(\"#{file}/factory.json\"), {throws:false}, (err, factory) ->\n        site.factory = factory; cb()\n    authors = (cb) ->\n      fs.readFile path(\"#{file}/AUTHORS.txt\"), 'utf-8', (err, authors) ->\n        site.authors = authors; cb()\n    # persona = (cb) ->\n    #   fs.readFile path(\"#{file}/status/persona.identity\"),'utf8', (err, identity) ->\n    #     site.persona = identity; cb()\n    # openid = (cb) ->\n    #   fs.readFile path(\"#{file}/status/open_id.identity\"),'utf8', (err, identity) ->\n    #     site.openid = identity; cb()\n    async.series [birth,authors,packagejson,factory,pages], (err) ->\n      done null, site\n\n  plugmap = (done) ->\n    glob \"wiki-plugin-*\", {cwd: argv.packageDir}, (err, files) ->\n      return done(err,null) if err\n      async.map files||[], info, (err, install) ->\n        return done(err,null) if err\n        done(null, install)\n\n\n  view = (plugin, done) ->\n    if /^\\w+$/.test(plugin)\n      pkg = \"wiki-plugin-#{plugin}\"\n      execFile 'npm', ['view', \"#{pkg}\", '--json'], (err, stdout, stderr) ->\n        try npm = JSON.parse stdout\n        done null, {plugin, pkg, npm}\n\n  farm = (req, res, next) ->\n    if argv.f\n      next()\n    else\n      res.status(404).send {error: 'service requires farm mode'}\n\n  admin = (req, res, next) ->\n    if app.securityhandler.isAdmin(req)\n      next()\n    else\n      admin = \"none specified\" unless argv.admin\n      user = \"not logged in\" unless req.session?.passport?.user || req.session?.email || req.session?.friend\n      res.status(403).send {error: 'service requires admin user', admin, user}\n\n  app.get route('page/:slug.json'), (req, res) ->\n    plugmap (err, install) ->\n      for i in install\n        for p in i.pages\n          if p.slug is req.params.slug\n            return jsonfile.readFile path(\"#{p.file}/pages/#{p.slug}\"), {throws:false}, (err, page) ->\n              res.json page\n      res.sendStatus 404\n\n  app.get route('file/:file/slug/:slug'), (req, res) ->\n    jsonfile.readFile path(\"#{req.params.file}/pages/#{req.params.slug}\"), {throws:false}, (err, page) ->\n      if err\n        res.sendStatus 404\n      else\n        res.json page\n\n  app.get route('sitemap.json'), (req, res) ->\n    plugmap (err, install) ->\n      # http://stackoverflow.com/a/4631593\n      res.json [].concat (i.pages for i in install)...\n\n  app.get route('plugins'), (req, res) ->\n    glob \"wiki-plugin-*\", {cwd: argv.packageDir}, (err, files) ->\n      return res.e err if err\n      async.map files||[], info, (err, install) ->\n        return res.e err if err\n        res.json {install, bundle}\n\n  app.post route('plugins'), (req, res) ->\n    payload = {bundle}\n\n    installed = (cb) ->\n      files = (\"wiki-plugin-#{plugin}\" for plugin in req.body.plugins||[])\n      async.map files||[], info, (err, install) ->\n        payload.install = install; cb()\n\n    published = (cb) ->\n      async.map req.body.plugins||[], view, (err, results) ->\n        payload.publish = results; cb()\n\n    async.parallel [installed, published], (err) ->\n      res.json payload\n\n  app.get route('view/:pkg'), (req, res) ->\n    if /^\\w+$/.test(req.params.pkg)\n      pkg = \"wiki-plugin-#{req.params.pkg}\"\n      res.setHeader 'Content-Type', 'application/json'\n      execFile('npm', ['view', \"#{pkg}\", '--json']).stdout.pipe(res)\n\n  app.post route('install'), admin, (req, res) ->\n    if /^\\w+$/.test(req.body.plugin) and /^[\\w.-]+$/.test(req.body.version)\n      pkg = \"wiki-plugin-#{req.body.plugin}@#{req.body.version}\"\n      console.log \"plugmatic installing #{pkg}\"\n      execFile 'npm', ['install', \"#{pkg}\", '--json'], {cwd: argv.packageDir+'/..'}, (err, stdout, stderr) ->\n        try npm = JSON.parse stdout\n        if err\n          res.status(400).json {error: 'server unable to install plugin', npm, stderr}\n        else\n          info \"wiki-plugin-#{req.body.plugin}\", (err, row) ->\n            res.json {installed: req.body.version, npm, stderr, row}\n\n  app.post route('restart'), admin, (req, res) ->\n    console.log 'plugmatic exit to restart'\n    res.sendStatus 200\n    process.exit 0\n\n\nmodule.exports = {startServer}\n"
  ],
  "sourceRoot": ""
}